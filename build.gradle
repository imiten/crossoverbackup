/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Miten.Mehta' at '6/4/16 2:07 PM' with Gradle 2.10
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.10/userguide/tutorial_java_projects.html
 */
buildscript {
    repositories {
      mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE")
    }
}

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: "war"

/*
ext {
  mainClassName = null
}
*/
springBoot {
   mainClass = 'crossover.backup.BackupController'
}
// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    jcenter()
}

configurations {
    providedRuntime
    mycustomconfiguration.exclude module : 'spring-boot-starter-web'
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    //compile 'org.slf4j:slf4j-api:1.7.13'
    compile 'org.springframework.boot:spring-boot-starter-parent:1.3.3.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-web:+'
    compile ('org.springframework.boot:spring-boot-starter-security')
    compile ('org.springframework.boot:spring-boot-starter-jdbc')
    compile ('org.springframework.boot:spring-boot-starter-data-jpa')
    compile ('mysql:mysql-connector-java:5.1.38')
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    testCompile ("org.springframework.boot:spring-boot-starter-test")

    mycustomconfiguration configurations.compile, "org.springframework.boot:spring-boot-starter", "com.fasterxml.jackson.core:jackson-databind"
}



war {
    baseName = 'crossoverbackup'
    version = '1.0.0-SNAPSHOT'
}


task clientJar(type: Jar) {
    appendix = 'client'
    from sourceSets.main.output
    exclude('**/*Controller*', '**/*Repository*', '**/static/**', '**/resources/**', '**/templates/**', '**/*.sql*', '**/application.properties')
}

task clientBoot(type: BootRepackage, dependsOn: clientJar) {
    withJarTask = clientJar
    customConfiguration = "mycustomconfiguration"
    mainClass = 'crossover.backup.ClientAgent'
}

build.dependsOn(clientBoot)
